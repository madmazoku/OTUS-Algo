Алгоритм HeapSort
Цель: Реализовать рассмотренные алгоритмы сортировки и сравнить их эффективность.
2 байта Реализовать алгоритм BubbleSort, SelectionSort или InsertionSort (два на выбор).
3 байта Реализовать алгоритм ShellSort с тремя вариантами выбора шагов.
3 байта Реализовать алгоритм HeapSort.
2 байта Простестировать алгоритмы, заполнить таблицу по результатам измерений, написать свой вывод сравнения, какой алгоритм лучше.

Файл с тестами приложен к заданию (563 мегабайта).
На первой строчке указан размер массива, на второй строчке через пробел перечислены элементы массива.
В файл результата записать числа из отсортированный массив в одну строчку через пробел.

Тестировать алгоритмы следует на массивах таких размеров:
1, 10, 100, 1.000, 10.000, 100.000, 1.000.000, 10.000.000 (этот по желанию)

И с различным характером данных:
а) random - массив их случайных чисел
б) digits - массив из случайных цифр
в) sorted - на 99% отсортированный массив
г) revers - обратно-отсортированный массив

Напишите, какие пункты вы сделали, сколько байт набрали и сколько ушло времени на каждый пункт.
Приложите ссылку на ваш код и на заполненную таблицу.

ВАЖНО! При размещении ответа укажите, на каком языке вы выполнили ДЗ. Это поможет нам ускорить его проверку.
Критерии оценки: 2 байта - BubbleSort, SelectionSort или InsertionSort (два на выбор)
3 байта - ShellSort с тремя вариантами выбора шагов.
3 байта - HeapSort.
2 байта - Тестирование и вывод